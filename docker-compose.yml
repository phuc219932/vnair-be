version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vnair_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: vnair_user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vnair-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  # app:
  #   build:
  #     context: .
  #     dockerfile: ${DOCKERFILE:-Dockerfile}
  #     args:
  #       - BUILDKIT_INLINE_CACHE=1
  #   container_name: vnair_app
  #   restart: unless-stopped
  #   environment:
  #     SPRING_PROFILES_ACTIVE: docker
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/vnair_user_db
  #     SPRING_DATASOURCE_USERNAME: postgres
  #     SPRING_DATASOURCE_PASSWORD: password
  #     SPRING_JPA_HIBERNATE_DDL_AUTO: update
  #     SERVER_PORT: 8080
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - vnair-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/api/users/stats"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s

  # # Adminer - Database Management Tool (Optional)
  # adminer:
  #   image: adminer:4.8.1
  #   container_name: vnair_adminer
  #   restart: unless-stopped
  #   ports:
  #     - "8081:8080"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - vnair-network

volumes:
  postgres_data:
    driver: local

networks:
  vnair-network:
    driver: bridge
